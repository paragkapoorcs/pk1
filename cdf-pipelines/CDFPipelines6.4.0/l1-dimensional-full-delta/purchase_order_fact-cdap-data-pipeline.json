{
    "name": "purchase_order_fact",
    "description": "purchase order fact",
    "artifact": {
        "name": "cdap-data-pipeline",
        "version": "6.4.0",
        "scope": "SYSTEM"
    },
    "config": {
        "resources": {
            "memoryMB": 2048,
            "virtualCores": 1
        },
        "driverResources": {
            "memoryMB": 2048,
            "virtualCores": 1
        },
        "connections": [
            {
                "from": "Merge Statement",
                "to": "Update Audit Table"
            }
        ],
        "comments": [],
        "postActions": [],
        "properties": {},
        "processTimingEnabled": true,
        "stageLoggingEnabled": false,
        "stages": [
            {
                "name": "Merge Statement",
                "plugin": {
                    "name": "BigQueryExecute",
                    "type": "action",
                    "label": "Merge Statement",
                    "artifact": {
                        "name": "google-cloud",
                        "version": "0.17.0",
                        "scope": "SYSTEM"
                    },
                    "properties": {
                        "project": "auto-detect",
                        "sql": "MERGE\nINTO         `${ProjectID}.${TargetDatasetNames1}.purchase_order_fact` tgt\nUSING        (WITH tmp_scr AS (\n                        SELECT     (ph.purchasing_document_number || '-' || pi.item_number) AS purchase_order_key ,\n                                   ph.purchasing_document_number ,\n                                   ph.purchasing_group ,\n                                   ph.purchasing_organization ,\n                                   ph.vendors_account_number ,\n                                   ph.purchasing_document_date ,\n                                   ph.logical_system_2 ,\n                                   ph.transaction_purchasing_document ,\n                                   pi.item_number ,\n                                   ph.cancel_data_record ,\n                                   ph.purchasing_document_type ,\n                                   ph.purchasing_document_category ,\n                                   ph.supplying_plant_stock ,\n                                   ph.status_of_purchasing_document ,\n                                   ph.supplying_plant_partner ,\n                                   ph.partner_supplier ,\n                                   pi.local_currency ,\n                                   pi.current_goods_receipt_quantity ,\n                                   pi.transfer_process ,\n                                   pi.delivery_completed ,\n                                   pi.material_number_1 ,\n                                   pi.quantity_deviation ,\n                                   pi.schedule_deviation ,\n                                   pi.total_delivery_time ,\n                                   pi.storage_location ,\n                                   pi.base_unit_of_measure ,\n                                   pi.quantity_variance ,\n                                   pi.material_group ,\n                                   pi.material_number ,\n                                   pi.purchase_order_unit ,\n                                   pi.order_quantity ,\n                                   pi.net_order_price ,\n                                   pi.net_order_value ,\n                                   pi.delivery_date_variance ,\n                                   pi.plant ,\n                                   CASE\n                                              WHEN ph.dw_last_update_date > pi.dw_last_update_date THEN ph.dw_last_update_date\n                                              ELSE pi.dw_last_update_date\n                                   END AS input_last_update_date ,\n                                   ph.dw_active_indicator ,\n                                   md.material_uuid ,\n                                   pd.plant_uuid ,\n                                   sd.supplier_uuid,\n                                   spod.supplier_purchase_org_uuid,\n                                   (pi.material_number || '-' || pi.plant) as material_key,\n                                    pi.plant as plant_key,\n                                    ph.vendors_account_number as supplier_key,\n                                    (pi.vendors_account_number || '-' || pi.purchasing_organization) as supplier_purchase_org_key\n                        FROM       `${ProjectID}.${StagingDatasetName}.purchasing_header` ph\n                        INNER JOIN\n                                   (\n                                                   SELECT DISTINCT cancel_data_record,\n                                                                   purchasing_document_date,\n                                                                   purchasing_document_type,\n                                                                   purchasing_document_category,\n                                                                   MIN(posting_date) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS posting_date,\n                                                                   purchasing_document_number,\n                                                                   purchasing_group,\n                                                                   purchasing_organization,\n                                                                   local_currency,\n                                                                   COALESCE(validity_period_start,'1900-01-01') AS validity_period_start,\n                                                                   COALESCE(validity_period_end,'1900-01-01')   AS validity_period_end,\n                                                                   receiving_supplier,\n                                                                   vendors_account_number,\n                                                                   different_invoicing_party,\n                                                                   goods_supplier_1,\n                                                                   logical_system,\n                                                                   original_logical_system,\n                                                                   supplying_issuing_plant,\n                                                                   status_of_purchasing_document,\n                                                                   MIN(entry_date) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS entry_date,\n                                                                   currency_key,\n                                                                   exchange_rate,\n                                                                   MAX(requisitioner) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS requisitioner,\n                                                                   promotion,\n                                                                   SUM(current_goods_receipt_quantity) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS current_goods_receipt_quantity,\n                                                                   SUM(shipping_notified) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number)              AS shipping_notified,\n                                                                   SUM(deliveries_number) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number)              AS deliveries_number,\n                                                                   reason_for_ordering,\n                                                                   application_component,\n                                                                   transfer_process,\n                                                                   item_number,\n                                                                   MAX(delivery_completed) OVER(PARTITION BY purchasing_document_number,item_number ORDER BY purchasing_document_number,item_number,material_number) AS delivery_completed,\n                                                                   material_number_1,\n                                                                   final_invoice,\n                                                                   outline_agreement,\n                                                                   target_quantity,\n                                                                   principal_agreement_item,\n                                                                   MAX(quantity_deviation) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS quantity_deviation,\n                                                                   item_counter,\n                                                                   MAX(schedule_deviation) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS schedule_deviation,\n                                                                   shipping_notification,\n                                                                   MAX(total_delivery_time) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS total_delivery_time,\n                                                                   storage_location,\n                                                                   base_unit_of_measure,\n                                                                   quantity_variance,\n                                                                   material_group,\n                                                                   material_number,\n                                                                   purchase_order_unit,\n                                                                   order_quantity,\n                                                                   net_order_price,\n                                                                   net_order_value,\n                                                                   price_unit,\n                                                                   item_category,\n                                                                   compliance_shipping_instructions,\n                                                                   on_time_delivery,\n                                                                   quantity_reliability,\n                                                                   on_time_delivery_performance,\n                                                                   points_score_quality_services,\n                                                                   invoice_receipt,\n                                                                   SUM(delivery_date_variance) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS delivery_date_variance,\n                                                                   short_text,\n                                                                   denominator,\n                                                                   equal_to,\n                                                                   goods_receipt_invoice_verification,\n                                                                   goods_receipt_indicator,\n                                                                   plant,\n                                                                   evaluated_receipt_settlement,\n                                                                   outline_agreement_target_value,\n                                                                   fiscal_year_variant,\n                                                                   interval_quantity_interval,\n                                                                   interval_for_date_split,\n                                                                   counter_date_split,\n                                                                   counter_quantity_interval,\n                                                                   SUM(counter_items) OVER(PARTITION BY purchasing_document_number,item_number,material_number ORDER BY purchasing_document_number,item_number,material_number) AS counter_items,\n                                                                   goods_supplier_2,\n                                                                   invoicing_party,\n                                                                   supplying_plant,\n                                                                   partner_supplier,\n                                                                   ordering_address,\n                                                                   smoothing_factor_quality_variance,\n                                                                   smoothing_factor,\n                                                                   best_score,\n                                                                   smoothing_factor_compliance,\n                                                                   TIME,\n                                                                   dw_active_indicator,\n                                                                   MAX(dw_last_update_date) OVER(PARTITION BY purchasing_document_number,item_number ORDER BY purchasing_document_number,item_number,material_number ) AS dw_last_update_date\n                                                   FROM            `${ProjectID}.${StagingDatasetName}.purchasing_item`\n                                                   WHERE           cancel_data_record <> 'X'\n                                                   AND             dw_active_indicator = 'Y') pi\n                        ON         ph.purchasing_document_number = pi.purchasing_document_number\n                        AND        ph.transaction_purchasing_document = '01'\n                        AND        ph.dw_active_indicator = pi.dw_active_indicator\n                        LEFT JOIN  `${ProjectID}.${StagingDatasetName}.layer1_audit_table` lat\n                        ON         1 = 1\n                        AND        lat.table_name = 'purchase_order_fact'\n                        LEFT JOIN  `${ProjectID}.${TargetDatasetNames2}.material_dimension` md\n                        ON         md.material_key = (pi.material_number || '-' || pi.plant)\n                        AND        md.dw_active_indicator = 'Y'\n                        LEFT JOIN  `${ProjectID}.${TargetDatasetNames2}.plant_dimension` pd\n                        ON         pd.plant_key = pi.plant\n                        AND        pd.dw_active_indicator = 'Y'\n                        LEFT JOIN  `${ProjectID}.${TargetDatasetNames2}.supplier_dimension` sd\n                        ON         sd.supplier_key = pi.vendors_account_number\n                        AND        sd.dw_active_indicator = 'Y'\n                        LEFT JOIN  `${ProjectID}.${TargetDatasetNames2}.supplier_purchase_org_dimension` spod\n                        ON         spod.supplier_purchase_org_key = (pi.vendors_account_number || '-' || pi.purchasing_organization)\n                        AND        spod.dw_active_indicator = 'Y'\n                        WHERE      ph.cancel_data_record <> 'X'\n                                   --AND        ph.purchasing_document_number = '4501173911'\n                        AND        ph.dw_active_indicator = 'Y'\n                        AND        (\n                                              ph.dw_last_update_date >=\n                                              CASE\n                                                         WHEN lat.full_delta_indicator = 'F' THEN lat.full_load_datetime\n                                                         WHEN lat.full_delta_indicator <> 'F' THEN lat.delta_load_datetime\n                                                         ELSE CAST('1900-01-01T00:00:00' AS DATETIME)\n                                              END\n                                   OR         pi.dw_last_update_date >=\n                                              CASE\n                                                         WHEN lat.full_delta_indicator = 'F' THEN lat.full_load_datetime\n                                                         WHEN lat.full_delta_indicator <> 'F' THEN lat.delta_load_datetime\n                                                         ELSE CAST('1900-01-01T00:00:00' AS DATETIME)\n                                              END)),\ntmp_purch AS (SELECT ts.*,\n     TO_HEX(MD5((select string_agg(CAST(col as STRING), ', ' order by offset)\n    from unnest(split(trim(format('%t',(select as struct ts.* except(input_last_update_date))), '()'),', ')) col with offset \n    where not col IS NULL\n    ))) as finalmd5key      \n  from tmp_scr ts)\nSELECT t.purchase_order_key as purchase_order_join_key,t.*\n  from tmp_purch t\nUNION ALL \nSELECT NULL as purchase_order_join_key,t.*\n  from tmp_purch t\n       INNER JOIN `${ProjectID}.${TargetDatasetNames1}.purchase_order_fact` pof\n   ON  pof.purchase_order_key  = t.purchase_order_key\n  AND pof.finalmd5key <> t.finalmd5key\n WHERE pof.dw_active_indicator = 'Y') scr\n ON tgt.purchase_order_key = scr.purchase_order_join_key\nWHEN MATCHED  AND tgt.finalmd5key <> scr.finalmd5key THEN\nUPDATE\nSET              tgt.dw_end_date = CURRENT_DATETIME() ,\n                 tgt.dw_active_indicator = 'N'\nWHEN NOT MATCHED THEN\nINSERT\n       (\n              purchase_order_uuid,\n              purchase_order_key,\n              purchasing_document_number,\n              purchasing_group,\n              purchasing_organization,\n              vendors_account_number,\n              purchasing_document_date,\n              logical_system_2,\n              transaction_purchasing_document,\n              item_number,\n              material_uuid,\n              plant_uuid,\n              supplier_uuid,\n              supplier_purchase_org_uuid,\n              material_number,\n              plant,\n              material_key,\n              plant_key,\n              supplier_key,\n              supplier_purchase_org_key,\n              cancel_data_record,\n              purchasing_document_type,\n              purchasing_document_category,\n              supplying_plant_stock,\n              status_of_purchasing_document,\n              supplying_plant_partner,\n              partner_supplier,\n              local_currency,\n              current_goods_receipt_quantity,\n              transfer_process,\n              delivery_completed,\n              material_number_1,\n              quantity_deviation,\n              schedule_deviation,\n              total_delivery_time,\n              storage_location,\n              base_unit_of_measure,\n              quantity_variance,\n              material_group,\n              purchase_order_unit,\n              order_quantity,\n              net_order_price,\n              net_order_value,\n              delivery_date_variance,\n              input_last_update_date,\n              finalmd5key,\n              dw_active_indicator,\n              dw_start_date,\n              dw_end_date,\n              dw_last_update_date\n       )\n       VALUES\n       (\n              TO_HEX(MD5(purchase_order_key)),\n              scr.purchase_order_key,\n              scr.purchasing_document_number,\n              scr.purchasing_group,\n              scr.purchasing_organization,\n              scr.vendors_account_number,\n              scr.purchasing_document_date,\n              scr.logical_system_2,\n              scr.transaction_purchasing_document,\n              scr.item_number,\n              scr.material_uuid,\n              scr.plant_uuid,\n              scr.supplier_uuid,\n              scr.supplier_purchase_org_uuid,\n              scr.material_number,\n              scr.plant,\n              scr.material_key,\n              scr.plant_key,\n              scr.supplier_key,\n              scr.supplier_purchase_org_key,\n              scr.cancel_data_record,\n              scr.purchasing_document_type,\n              scr.purchasing_document_category,\n              scr.supplying_plant_stock,\n              scr.status_of_purchasing_document,\n              scr.supplying_plant_partner,\n              scr.partner_supplier,\n              scr.local_currency,\n              scr.current_goods_receipt_quantity,\n              scr.transfer_process,\n              scr.delivery_completed,\n              scr.material_number_1,\n              scr.quantity_deviation,\n              scr.schedule_deviation,\n              scr.total_delivery_time,\n              scr.storage_location,\n              scr.base_unit_of_measure,\n              scr.quantity_variance,\n              scr.material_group,\n              scr.purchase_order_unit,\n              scr.order_quantity,\n              scr.net_order_price,\n              scr.net_order_value,\n              scr.delivery_date_variance,\n              scr.input_last_update_date,\n              scr.finalmd5key,\n              scr.dw_active_indicator,\n              CURRENT_DATETIME(),\n              DATETIME(9999, 12, 31, 23, 59, 59),\n              CURRENT_DATETIME()\n       );",
                        "dialect": "standard",
                        "mode": "batch",
                        "dataset": "${TargetDatasetNames1}",
                        "table": "purchase_order_fact",
                        "useCache": "false",
                        "location": "US",
                        "rowAsArguments": "false",
                        "serviceAccountType": "filePath",
                        "serviceFilePath": "auto-detect"
                    }
                },
                "outputSchema": [
                    {
                        "name": "etlSchemaBody",
                        "schema": ""
                    }
                ],
                "id": "Merge-Statement",
                "type": "action",
                "label": "Merge Statement",
                "icon": "fa-plug"
            },
            {
                "name": "Update Audit Table",
                "plugin": {
                    "name": "BigQueryExecute",
                    "type": "action",
                    "label": "Update Audit Table",
                    "artifact": {
                        "name": "google-cloud",
                        "version": "0.17.0",
                        "scope": "SYSTEM"
                    },
                    "properties": {
                        "project": "auto-detect",
                        "sql": "MERGE INTO \n`${ProjectID}.${StagingDatasetName}.layer1_audit_table` tgt\nUSING ( SELECT \n         'purchase_order_fact' as table_name\n         ,CASE WHEN (select full_delta_indicator from `${ProjectID}.${StagingDatasetName}.layer1_audit_table` where table_name = 'purchase_order_fact') IS NULL\n                    OR (select full_delta_indicator from `${ProjectID}.${StagingDatasetName}.layer1_audit_table` where table_name = 'purchase_order_fact') = 'F'\n               THEN 'F'\n               ELSE 'D'\n          END AS full_delta_indicator\n        ,'2LIS_02_HDR,2LIS_02_ITM' as extractors_names\n        ,CAST('1900-01-01T00:00:00' AS DATETIME) as full_load_datetime\n        ,(select max(input_last_update_date) as delta_load_datatime from `${ProjectID}.${TargetDatasetNames1}.purchase_order_fact`) as delta_load_datetime\n        ,(select COUNT(*) AS inserted_record_count from `${ProjectID}.${TargetDatasetNames1}.purchase_order_fact` a inner join `${ProjectID}.${StagingDatasetName}.layer1_audit_table` b\n          on 1 = 1 where b.table_name = 'purchase_order_fact' and  a.dw_last_update_date > CASE WHEN b.full_delta_indicator = 'F' \n                                                                                            THEN b.full_load_datetime\n                                                                                            WHEN b.full_delta_indicator <> 'F' THEN b.delta_load_datetime\n                                                                                            ELSE CAST('1900-01-01T00:00:00' AS DATETIME)\n                                                                                       END\n          and a.dw_active_indicator = 'Y') AS inserted_record_count\n        ,CURRENT_DATETIME() as last_update_date\n) scr\non tgt.table_name = scr.table_name\nWHEN MATCHED THEN \nUPDATE set tgt.full_load_datetime ='1900-01-01T00:00:00'\n          ,tgt.delta_load_datetime = scr.delta_load_datetime\n          ,tgt.inserted_record_count = scr.inserted_record_count\n          ,tgt.last_update_date = scr.last_update_date\nWHEN NOT MATCHED THEN\nINSERT (table_name,\n        full_delta_indicator,\n        extractors_names,\n        full_load_datetime,\n        delta_load_datetime,\n        inserted_record_count,\n        last_update_date)\nVALUES(scr.table_name,\n       scr.full_delta_indicator,\n       scr.extractors_names,\n       scr.full_load_datetime,\n       scr.delta_load_datetime,\n       scr.inserted_record_count,\n       scr.last_update_date);",
                        "dialect": "standard",
                        "mode": "batch",
                        "dataset": "${StagingDatasetName}",
                        "table": "layer1_audit_table",
                        "useCache": "false",
                        "location": "US",
                        "rowAsArguments": "false",
                        "serviceAccountType": "filePath",
                        "serviceFilePath": "auto-detect"
                    }
                },
                "outputSchema": [
                    {
                        "name": "etlSchemaBody",
                        "schema": ""
                    }
                ],
                "id": "Update-Audit-Table",
                "type": "action",
                "label": "Update Audit Table",
                "icon": "fa-plug"
            }
        ],
        "schedule": "0 * * * *",
        "engine": "spark",
        "numOfRecordsPreview": 100,
        "description": "purchase order fact",
        "maxConcurrentRuns": 1
    }
}